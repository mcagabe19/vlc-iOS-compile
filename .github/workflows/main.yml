name: CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  Android:
    strategy:
      fail-fast: false
      matrix:
        arch: [arm, arm64, x86, x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e
      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Get libvlcjni
        run: git clone https://code.videolan.org/videolan/libvlcjni.git --depth=1 --recursive -b libvlcjni-3.x
      - name: Setup libVLC
        run: sudo apt-get install gettext autopoint automake ant autopoint cmake build-essential libtool-bin lua5.2 liblua5.2-dev patch pkg-config protobuf-compiler ragel subversion unzip git flex python3 wget nasm meson ninja-build < /dev/null > /dev/null && git config --global user.name "GitHub Actions" && git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com" && cd libvlcjni && git apply ../libvlcjni-patches/* && buildsystem/get-vlc.sh
      - name: Compile libVLC
        run: cd libvlcjni && buildsystem/compile-libvlc.sh -a ${{matrix.arch}} --no-jni --release
        env:
           ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
           ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.arch }}
          path: libvlcjni/libvlc/jni/libs/*/*.so
          if-no-files-found: error
  iOS:
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        os: [iPhone, iPhoneSim]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Get VLC
        run: git clone https://code.videolan.org/videolan/vlc.git --depth=1 --recursive -b 3.0.21-1
      - name: Install Dependencies
        run: brew reinstall autoconf automake nasm libtool bison m4 ragel help2man meson ninja yasm protobuf
      - name: Apply libVLC Patches
        run: cd vlc && git apply ../vlckit-patches/*.patch
      - name: Compile libVLC
        run: |
          mkdir vlc/iOS
          cd vlc/iOS
          if [[ "${{ matrix.os }}" == "iPhone" ]] ; then
            bash ../extras/package/apple/build.sh --arch=arm64 --disable-debug --sdk=$(xcodebuild -showsdks | grep 'iphoneos[0-9.]*' | awk '{print $NF}')
          else
            bash ../extras/package/apple/build.sh --arch=x86_64 --disable-debug --sdk=$(xcodebuild -showsdks | grep 'iphonesimulator[0-9.]*' | awk '{print $NF}')
          fi
      - name: Strip libvlc-full-static.a
        run: strip vlc/iOS/static-lib/libvlc-full-static.a
      - name: Upload libvlc-full-static.a
        uses: actions/upload-artifact@main
        with:
          name: libvlc-full-static-${{ matrix.os }}
          path: vlc/iOS/static-lib/libvlc-full-static.a
          if-no-files-found: error
